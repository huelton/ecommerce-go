definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  controllers.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.Product:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      isAdmin:
        type: boolean
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário e retorna um token
      parameters:
      - description: Credenciais do usuário
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Invalid JSON
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: User not Found or Invalid Password
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Error in find User
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Login de usuário
      tags:
      - Auth
  /products:
    post:
      consumes:
      - application/json
      description: Create a product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Crate a product
      tags:
      - orders
  /register:
    post:
      consumes:
      - application/json
      description: Cria um novo usuário no sistema
      parameters:
      - description: Dados do usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Invalid JSON
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Error in insert User
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Registro de usuário
      tags:
      - Auth
swagger: "2.0"
